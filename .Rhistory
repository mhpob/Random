axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pass.dat <- pass.dat %>%
mutate(pred.growth = sturgrow(Temp, Sal, DO.pct),
river = substr(Site.ID, 1, 2))
test <- function(var, brk){
seqs <- function(){seq(range(pd_bot[, var])[1] -
0.05*range(pd_bot[, var])[1],
range(pd_bot[, var])[2] +
0.05*range(pd_bot[, var])[2], brk)}
pd_bot <- pass.dat %>%
filter(Type == 'B')
pd_bot$bin <- findInterval(pd_bot[, var], seqs())
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seqs(),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var)
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(seqs()[1],
seqs()[length(seqs())]),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
test('Temp', 2)
test('DO.pct', 5)
test('Sal', 1)
test('pred.growth', 0.005)
test('pred.growth', 0.0005)
test('pred.growth', 0.00005)
nameS(pass.dat)
names(pass.dat)
test('Cond', 0.2)
test('Cond', 1)
test('Cond', 5)
test('Cond', 2)
test <- function(var, brk){
pd_bot <- pass.dat %>%
filter(Type == 'B') %>%
mutate(bin = findInterval(pd_bot[, var],
seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]), brk)))
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]),
brk),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var)
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
test('Temp', 1)
test('DO.pct', 5)
test('Cond', 2)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pass.dat <- pass.dat %>%
mutate(pred.growth = sturgrow(Temp, Sal, DO.pct),
river = substr(Site.ID, 1, 2))
test <- function(var, brk){
pd_bot <- pass.dat %>%
filter(Type == 'B') %>%
mutate(bin = findInterval(pd_bot[, var],
seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]), brk)))
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]),
brk),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var)
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
pd_bot <- pass.dat %>%
filter(Type == 'B') %>%
test('Temp', 1)
test <- function(var, brk){
pd_bot <- pass.dat %>%
filter(Type == 'B')
pd_bot <- pd_bot %>%
mutate(bin = findInterval(pd_bot[, var],
seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]), brk)))
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]),
brk),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var)
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
test('Temp', 1)
test('DO.pct', 5)
test('Sal', 1)
test('Sal', 2)
test('Cond', 2)
var <- 'Cond'; brk <- 5
var <- 'Cond'; brk <- 2
pd_bot <- pass.dat %>%
filter(Type == 'B')
pd_bot <- pd_bot %>%
mutate(bin = findInterval(pd_bot[, var],
seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]), brk)))
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]),
brk),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var)
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
View(det.bins)
sum(det.bins$detect)
histo
test <- function(var, brk){
pd_bot <- pass.dat %>%
filter(Type == 'B')
pd_bot <- pd_bot %>%
mutate(bin = findInterval(pd_bot[, var],
seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]), brk)))
det.bins <- pd_bot %>%
group_by(bin) %>%
summarize(detect = sum(Detections))
histo <- hist(pd_bot[, var], breaks = seq(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2]),
brk),
plot = F)
mids <- data.frame(mids = histo$mids)
mids$bin <- row.names(mids)
det.bins <- merge(det.bins, mids)
det.bins <- det.bins[det.bins$detect != 0,]
par(mar = c(5, 4, 4, 5) + 0.1)
plot(histo, main = var, xlab = var,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])))
par(new = T)
plot(det.bins$mids, det.bins$detect,
xlim = c(floor(range(pd_bot[, var])[1]),
ceiling(range(pd_bot[, var])[2])),
col = 'blue', xaxt = "n", yaxt = "n", xlab = "", ylab = "")
axis(4, at = seq(0, ceiling(range(det.bins$detect)[2]), 5),
col.axis = 'blue')
mtext('Detections', side = 4, line = 3, col = 'blue')
}
test('Temp', 1)
test('DO.pct', 5)
test('Sal', 2)
test('Cond', 2)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pass.dat <- pass.dat %>%
mutate(pred.growth = sturgrow(Temp, Sal, DO.pct),
river = substr(Site.ID, 1, 2))
histo <- hist(pd_bot[, 'DO.pct'], breaks = seq(floor(range(pd_bot[, 'DO.pct'])[1]),
ceiling(range(pd_bot[, 'DO.pct'])[2]),
5),
plot = T)
hist(pass.dat$DO.pct)
hist(pass.dat$DO.pct, ymin = 0)
hist(pass.dat$DO.pct, ylim=c(0,))
hist(pass.dat$DO.pct, ylim=c(0,800))
hist(pass.dat$DO.pct, ylim=c(0,1000))
library(TelemetryR); library(ggplot2); library(dplyr)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pass.dat <- pass.dat %>%
mutate(pred.growth = sturgrow(Temp, Sal, DO.pct),
river = substr(Site.ID, 1, 2))
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = sum(mean(Detections)))
View(pass.dat)
View(pd_mean)
library(fields)
library(rgdal); library(ggplot2); library(dplyr); library(fields)
york <- readOGR('p:/obrien/gis/shapefiles', 'YKPKRivs')
plot(york)
york
summary(york)
york@data$ID <- ifelse(york@data$FTYPE %in% c(364, 460), 'pk', 'yk')
york <- spChFIDs(york, paste0(york@data$ID, row.names(york)))
summary(york)
york.ras <- rasterize(york)
library(rgdal); library(ggplot2); library(fields)
library(raster); library(dplyr)
york <- readOGR('p:/obrien/gis/shapefiles', 'YKPKRivs')
york@data$ID <- ifelse(york@data$FTYPE %in% c(364, 460), 'pk', 'yk')
york <- spChFIDs(york, paste0(york@data$ID, row.names(york)))
york.ras <- rasterize(york)
?rasterize
extent(york)
york.ras <- raster(extent(york),
resolution = 1/360, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
plot(york.ras)
par(new = T)
plot(york)
plot(york.ras)
par(new = T)
plot(york)
par(new = F)
plot(york.ras)
plot(york["Site.ID" == "PK",])
plot(york[york$Site.ID == "PK",])
names(york)
plot(york[york$ID == "PK",])
head(york[york$ID,])
head(york[[1]])
head(york)
plot(york[york$ID == "pk",])
plot(york.ras)
par(new = T)
plot(york)
plot(york, col = 'red')
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/360, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/720, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
720+360
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/1080, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2000, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
1080+360
1440+360
1800+360
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
?xyFromCell
data.frame(xyFromCell(pk.ras, 1:ncell(pk.ras)))  # get raster cell coordinates
xy <- data.frame(xyFromCell(pk.ras, 1:ncell(pk.ras)))  # get raster cell coordinates
head(xy)
?Tp
?Tps
?ozone
head(ozone)
?getValues
head(xy)
?raster
data(ozone2)
x<-ozone2$lon.lat
y<- ozone2$y[16,] # June 18, 1987
quilt.plot( x,y)
head(y)
tail(y)
US( add=TRUE) # add US map
fit<- Tps(x,y)
set.panel(2,2)
plot(fit) # four diagnostic plots of  fit and residuals.
set.panel()
surface(fit) # contour/image plot of the fitted surface
US( add=TRUE, col="magenta", lwd=2) # US map overlaid
title("Daily max 8 hour ozone in PPB,  June 18th, 1987")
head(x)
header = T, stringsAsFactors = F)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
names(pass.dat)
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = mean(Detections))
View(pd_mean)
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(lat = mean(DD.Lat),
lon = mean(DD.Long),
temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = mean(Detections))
View(pd_mean)
View(pass.dat)
View(pd_mean)
x <- pd.mean[pd.mean$Cruise == '2014_1', 3:4]
x <- pd_mean[pd.mean$Cruise == '2014_1', 3:4]
x <- pd_mean[pd_mean$Cruise == '2014_1', 3:4]
View(pd_mean)
x <- pd_mean[pd_mean$Cruise == '2014_1', c(3,4)]
names(pd_mean)
head(pd_mean[,1:2])
head(pd_mean[,3:4])
head(pd_mean[,c(3,4)])
head(pd_mean[,c(1,3,4)])
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(lat = mean(DD.Lat),
lon = mean(DD.Long),
temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = mean(Detections)) %>%
data.frame()
x <- pd_mean[pd_mean$Cruise == '2014_1', c(3,4)]
View(x)
View(pd_mean)
y <- pd_mean[pd_mean$Cruise == '2014_1', 7]
quilt.plot( x,y)
US( add=TRUE) # add US map
par(new = T)
york <- readOGR('p:/obrien/gis/shapefiles', 'YKPKRivs')
york@data$ID <- ifelse(york@data$FTYPE %in% c(364, 460), 'pk', 'yk')
york <- spChFIDs(york, paste0(york@data$ID, row.names(york)))
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(lat = mean(DD.Lat),
lon = mean(DD.Long),
temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = mean(Detections)) %>%
data.frame()
x <- pd_mean[pd_mean$Cruise == '2014_1', c(3,4)]
y <- pd_mean[pd_mean$Cruise == '2014_1', 7]
?par
plot(york[york$ID == 'pk',])
x <- pd_mean[pd_mean$Cruise == '2014_1', c(3,4)]
y <- pd_mean[pd_mean$Cruise == '2014_1', 7]
quilt.plot(x, y)
par(add = T)
par(new = T)
plot(york[york$ID == 'pk',])
par(new = T)
quilt.plot(x, y)
?quilt.plot
quilt.plot(x, y, xlim = c(37.3, 37.6))
par(new = T)
plot(york[york$ID == 'pk',])
quilt.plot(x, y, xlim = c(37.3, 37.6))
plot(york[york$ID == 'pk',])
par(new = T)
quilt.plot(x, y, xlim = c(37.3, 37.6))
range(x)
range(x[1])
plot(york[york$ID == 'pk',])
par(new = T)
quilt.plot(x, y, xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
plot(york[york$ID == 'pk',], xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
par(new = T)
quilt.plot(x, y, xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
plot(york[york$ID == 'pk',], xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
par(new = T)
quilt.plot(x, y, xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
range(york[york$ID == 'pk',])
fit <- Tps(x,y)
plot(fit)
surface(fit)
par(new = T)
plot(york[york$ID == 'pk',], xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
plot(york[york$ID == 'pk',], xlim = c(37.3, 37.6), ylim = c(-77.1,-76.4))
plot(york[york$ID == 'pk',])
par(new = T)
surface(fit)
?plot
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- rasterize(york, pk.ras)
plot(pk.ras)
par(new = T)
surface(fit)
intras <- interpolate(pk.ras, fit)
plot(intras)
?interpolate
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
intras <- interpolate(pk.ras, fit)
plot(intras)
pass.dat <- read.csv('p:/obrien/biotelemetry/csi/listening/activedata.csv',
header = T, stringsAsFactors = F)
pd_mean <- pass.dat %>%
group_by(Site.ID, Cruise) %>%
summarize(lat = mean(DD.Lat),
lon = mean(DD.Long),
temp = mean(Temp),
do = mean(DO.pct),
sal = mean(Sal),
det = mean(Detections)) %>%
data.frame()
x <- pd_mean[pd_mean$Cruise == '2014_1', c(3,4)]
y <- pd_mean[pd_mean$Cruise == '2014_1', 7]
quilt.plot(x, y, xlim = c(37.3, 37.6))
pk.ras <- raster(extent(york[york$ID == 'pk',]),
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
vals = 1,
crs = proj4string(york))
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
crs = proj4string(york))
york <- readOGR('p:/obrien/gis/shapefiles', 'YKPKRivs')
york@data$ID <- ifelse(york@data$FTYPE %in% c(364, 460), 'pk', 'yk')
york <- spChFIDs(york, paste0(york@data$ID, row.names(york)))
pk.ras <- raster(extent(york[york$ID == 'pk',]),
resolution = 1/2160, #5 arc-second grids = 720, 10 = 360
crs = proj4string(york))
plot(pk.ras)
?fit
fit <- Tps(x,y)
plot(fit)
surface(fit)
par(new = T)
quilt.plot(x, y)
plot(pk.ras)
intras <- interpolate(x, fit)
intras <- interpolate(pk.ras, fit)
plot(intras)
?mask
?raster
?raster
